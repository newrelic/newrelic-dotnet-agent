name: Deploy the New Relic Azure Site Extension

on:
  workflow_dispatch:
    inputs:
      run_id:
        description: 'Run ID of the Release Workflow (siteextension_release.yml) that was triggered by creating a Release in GitHub.  ID can be found in URL for run.'
        required: true
      deploy:
        description: 'If "true", deploy the artifacts. If "false", do everything except deploy.'
        required: true
        default: 'false'

env:
  DOTNET_NOLOGO: true

permissions:
  contents: read

jobs:

  get-external-artifacts:
    permissions:
      actions: read  # for dawidd6/action-download-artifact to query and download artifacts
      pull-requests: read  # for dawidd6/action-download-artifact to query commit hash
    name: Get and Publish Deploy Artifacts Locally
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
        with:
          egress-policy: audit 

      - name: Download Deploy Artifacts
        uses: dawidd6/action-download-artifact@268677152d06ba59fcec7a7f0b5d961b6ccd7e1e # v2.28.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: siteextension_release.yml
          run_id: ${{ github.event.inputs.run_id }}
          name: deploy-artifacts
          path: ${{ github.workspace }}
          repo: ${{ github.repository }}
      
      - name: Upload Deploy Artifacts Locally
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: deploy-artifacts
          path: ${{ github.workspace }}
          if-no-files-found: error
  
  deploy-nuget:
    needs: get-external-artifacts
    name: Deploy to NuGet
    runs-on: windows-2019

    env:
      nuget_source: https://www.nuget.org

    steps:
      - name: Download Deploy Artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: deploy-artifacts
          path: ${{ github.workspace }}\working_dir

      - name: Setup NuGet API Key
        run: |
          nuget.exe setApiKey ${{ secrets.NUGET_APIKEY }} -Source ${{ env.nuget_source }}
        shell: pwsh

      - name: Deploy New Relic Azure Site Extension to Nuget
        run: |
          $packageName = Get-ChildItem ${{ github.workspace }}\working_dir\AzureSiteExtension\NewRelic.Azure.WebSites.Extension.*.nupkg -Name
          $packagePath = Convert-Path ${{ github.workspace }}\working_dir\AzureSiteExtension\$packageName
          if ("${{ github.event.inputs.deploy }}" -eq "true") {
            nuget.exe push $packagePath -Source ${{ env.nuget_source }}
          }
          else {
            Write-Host "Input:deploy was not true (${{ github.event.inputs.deploy }}).  The following deploy command was not run:"
            Write-Host "nuget.exe push $packagePath -Source ${{ env.nuget_source }}"
          }
        shell: powershell
