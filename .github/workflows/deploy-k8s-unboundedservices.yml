name: Deploy UnboundedServices to AKS

on:
  push: # temporary to test the workflow
    branches:
      - ci/unbounded-k8s-cluster
  workflow_dispatch:

permissions:
  id-token: write # Required for Azure login
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      ACR_NAME: ${{ secrets.AZURE_UNBOUNDED_SERVICES_REGISTRY_NAME }}
      RESOURCE_GROUP: ${{ secrets.AZURE_INTEGRATION_TEST_SERVICES_RESOURCE_GROUP }}
      PUBLIC_IP_NAME: ${{ secrets.AZURE_K8S_PUBLIC_IP_NAME }}
      CLUSTER_NAME: ${{ secrets.AZURE_K8S_CLUSTER_NAME }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Azure Login
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
        with:
          client-id: ${{ secrets.AZURE_UNBOUNDED_SERVICES_MANAGED_IDENTITY_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_UNBOUNDED_SERVICES_MANAGED_IDENTITY_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Azure Container Registry Login
        uses: azure/docker-login@15c4aadf093404726ab2ff205b2cdd33fa6d054c # v2.0.0
        with:
          login-server: ${{ secrets.AZURE_UNBOUNDED_SERVICES_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_UNBOUNDED_SERVICES_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_UNBOUNDED_SERVICES_REGISTRY_PASSWORD }}
      - name: Build and Push Docker Images to ACR
        shell: bash
        run: |
          chmod +x ./tests/Agent/IntegrationTests/UnboundedServices/build_and_push_acr.sh
          cd ./tests/Agent/IntegrationTests/UnboundedServices
          ./build_and_push_acr.sh $ACR_NAME $RESOURCE_GROUP
      - name: Create Kubernetes Secrets Manifest
        env:
          TEST_SECRETS: ${{ secrets.TEST_SECRETS }}
        run: |
          chmod +x ./tests/Agent/IntegrationTests/UnboundedServices/create_k8s_secrets.sh
          cd ./tests/Agent/IntegrationTests/UnboundedServices
          ./create_k8s_secrets.sh
      - name: Set AKS Context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
      - name: Get the public IP address from Azure and set it as an environment variable
        run: |
          PUBLIC_IP=$(az network public-ip show --resource-group $RESOURCE_GROUP --name $PUBLIC_IP_NAME --query ipAddress -o tsv)
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
      - name: Deploy to AKS
        run: |
          chmod +x ./tests/Agent/IntegrationTests/UnboundedServices/deploy_to_aks.sh
          cd ./tests/Agent/IntegrationTests/UnboundedServices
          ./deploy_to_aks.sh

