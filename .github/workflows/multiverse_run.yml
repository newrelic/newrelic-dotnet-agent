name: Run the MultiverseScanner

on:
  workflow_call:
    inputs:
      agentVersion:
        description: 'Agent version being tested'
        default: '0.0.0.0'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      agentVersion:
        description: 'Agent version being tested'
        default: '0.0.0.0'
        required: true

env:
  DOTNET_NOLOGO: true

permissions:
  contents: read

jobs:
  build-run-publish-multiverse-testing:
    name: Build and Publish Multiverse Testing Suite
    runs-on: ubuntu-latest
    continue-on-error: true
    
    env:
      multiverse_path: ${{ github.workspace }}/tests/Agent/MultiverseTesting
      multiverse_solution: ${{ github.workspace }}/tests/Agent/MultiverseTesting/MultiverseTesting.sln
      multiverse_consolescanner_path: ${{ github.workspace }}/tests/Agent/MultiverseTesting/ConsoleScanner/bin/Release/netcoreapp3.1
      multiverse_reportbuilder_path: ${{ github.workspace }}/tests/Agent/MultiverseTesting/ReportBuilder/bin/Release/netcoreapp3.1
      MVS_XML_PATH: ${{ github.workspace }}/src/Agent/NewRelic/Agent/Extensions/Providers/Wrapper

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit 

      - name: Checkout
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
        with:
          fetch-depth: 0

      - name: Cache Multiverse Testing Suite
        id: cache-multiverse
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ${{ env.multiverse_path }}
          key: multiverse-${{ hashFiles('**/tests/Agent/MultiverseTesting') }}

      - name: Build MultiverseTesting.sln
        if: steps.cache-multiverse.outputs.cache-hit != 'true'
        run: |
          echo "List NuGet Sources (necessary to avoid subsequent problems with NuGet package restore)"
          dotnet nuget list source
          echo "dotnet build ${{ env.multiverse_solution }} --configuration Release"
          dotnet build ${{ env.multiverse_solution }} --configuration Release
        shell: bash

      - name: Setup .NET Core 3.1.100
        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0
        with:
          dotnet-version: '3.1.100'

      - name: Run ConsoleScanner
        run: |
          cd ${{ env.multiverse_consolescanner_path }}
          ./ConsoleScanner "./config.yml" "./reports.yml"
        shell: bash

      - name: Upload MVS
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: mvs
          path: |
            ${{ env.multiverse_consolescanner_path }}
            ${{ env.multiverse_reportbuilder_path }}
            ! ${{ env.multiverse_consolescanner_path }}/NugetData/**/*
            ! ${{ env.multiverse_consolescanner_path }}/runtimes/**/*
          if-no-files-found: error
          retention-days: 1

  publish-docs:
    permissions:
      contents: write  # for JamesIves/github-pages-deploy-action to push changes in repo
    needs: build-run-publish-multiverse-testing
    name: Publish Docs to gh-pages
    if: ${{ success() }}
    runs-on: ubuntu-latest
    continue-on-error: true

    env:
      multiverse_path: ${{ github.workspace }}/tests/Agent/MultiverseTesting
      multiverse_solution: ${{ github.workspace }}/tests/Agent/MultiverseTesting/MultiverseTesting.sln
      multiverse_consolescanner_path: ${{ github.workspace }}/tests/Agent/MultiverseTesting/ConsoleScanner/bin/Release/netcoreapp3.1
      multiverse_reportbuilder_path: ${{ github.workspace }}/tests/Agent/MultiverseTesting/ReportBuilder/bin/Release/netcoreapp3.1
      MVS_XML_PATH: ${{ github.workspace }}/src/Agent/NewRelic/Agent/Extensions/Providers/Wrapper

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit 

      - name: Setup .NET Core 3.1.100
        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0
        with:
          dotnet-version: '3.1.100'

      - name: Checkout
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
        with:
          ref: 'gh-pages'
          fetch-depth: 0

      - name: Download MVS
        uses: actions/download-artifact@9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395 # v4.1.6
        with:
          name: mvs
          path: ${{ env.multiverse_path }}

      - name: Run ReportBuilder
        run: |
          cd ${{ env.multiverse_reportbuilder_path }}
          sudo chmod 777 ./ReportBuilder
          ./ReportBuilder "${{ inputs.agentVersion }}" "${{ env.multiverse_consolescanner_path }}/reports.yml" "${{ github.workspace }}/docs/mvs"
        shell: bash

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@ec9c88baef04b842ca6f0a132fd61c762aa6c1b0 # 4.6.0
        with:
          branch: gh-pages
          folder: .
