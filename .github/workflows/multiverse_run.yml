name: Run the MultiverseScanner

on:
  workflow_call:
    inputs:
      agentVersion:
        description: 'Agent version being tested'
        default: '0.0.0.0'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      agentVersion:
        description: 'Agent version being tested'
        default: '0.0.0.0'
        required: true

env:
  DOTNET_NOLOGO: true

permissions:
  contents: read

jobs:
  build-run-publish-multiverse-testing:
    name: Build and Publish Multiverse Testing Suite
    runs-on: ubuntu-latest
    continue-on-error: true
    
    env:
      multiverse_path: ${{ github.workspace }}/tests/Agent/MultiverseTesting
      multiverse_solution: ${{ github.workspace }}/tests/Agent/MultiverseTesting/MultiverseTesting.sln
      multiverse_consolescanner_path: ${{ github.workspace }}/tests/Agent/MultiverseTesting/ConsoleScanner/bin/Release/netcoreapp3.1
      multiverse_reportbuilder_path: ${{ github.workspace }}/tests/Agent/MultiverseTesting/ReportBuilder/bin/Release/netcoreapp3.1
      MVS_XML_PATH: ${{ github.workspace }}/src/Agent/NewRelic/Agent/Extensions/Providers/Wrapper

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v2.3.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
        with:
          fetch-depth: 0

      - name: Cache Multiverse Testing Suite
        id: cache-multiverse
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ env.multiverse_path }}
          key: multiverse-${{ hashFiles('**/tests/Agent/MultiverseTesting') }}

      - name: Build MultiverseTesting.sln
        if: steps.cache-multiverse.outputs.cache-hit != 'true'
        run: |
          echo "List NuGet Sources (necessary to avoid subsequent problems with NuGet package restore)"
          dotnet nuget list source
          echo "dotnet build ${{ env.multiverse_solution }} --configuration Release"
          dotnet build ${{ env.multiverse_solution }} --configuration Release
        shell: bash

      - name: Setup .NET Core 3.1.100
        uses: actions/setup-dotnet@608ee757cfcce72c2e91e99aca128e0cae67de87 # v1.9.1
        with:
          dotnet-version: '3.1.100'

      - name: Run ConsoleScanner
        run: |
          cd ${{ env.multiverse_consolescanner_path }}
          ./ConsoleScanner "./config.yml" "./reports.yml"
        shell: bash

      - name: Upload MVS
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: mvs
          path: |
            ${{ env.multiverse_consolescanner_path }}
            ${{ env.multiverse_reportbuilder_path }}
            ! ${{ env.multiverse_consolescanner_path }}/NugetData/**/*
            ! ${{ env.multiverse_consolescanner_path }}/runtimes/**/*
          if-no-files-found: error
          retention-days: 1

  publish-docs:
    permissions:
      contents: write  # for JamesIves/github-pages-deploy-action to push changes in repo
    needs: build-run-publish-multiverse-testing
    name: Publish Docs to gh-pages
    if: ${{ success() }}
    runs-on: ubuntu-latest
    continue-on-error: true

    env:
      multiverse_path: ${{ github.workspace }}/tests/Agent/MultiverseTesting
      multiverse_solution: ${{ github.workspace }}/tests/Agent/MultiverseTesting/MultiverseTesting.sln
      multiverse_consolescanner_path: ${{ github.workspace }}/tests/Agent/MultiverseTesting/ConsoleScanner/bin/Release/netcoreapp3.1
      multiverse_reportbuilder_path: ${{ github.workspace }}/tests/Agent/MultiverseTesting/ReportBuilder/bin/Release/netcoreapp3.1
      MVS_XML_PATH: ${{ github.workspace }}/src/Agent/NewRelic/Agent/Extensions/Providers/Wrapper

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v2.3.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Setup .NET Core 3.1.100
        uses: actions/setup-dotnet@608ee757cfcce72c2e91e99aca128e0cae67de87 # v1.9.1
        with:
          dotnet-version: '3.1.100'

      - name: Checkout
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
        with:
          ref: 'gh-pages'
          fetch-depth: 0

      - name: Download MVS
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: mvs
          path: ${{ env.multiverse_path }}

      - name: Run ReportBuilder
        run: |
          cd ${{ env.multiverse_reportbuilder_path }}
          sudo chmod 777 ./ReportBuilder
          ./ReportBuilder "${{ github.event.inputs.agentVersion }}" "${{ env.multiverse_consolescanner_path }}/reports.yml" "${{ github.workspace }}/docs/mvs"
        shell: bash

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@0f24da7de3e7e135102609a4c9633b025be8411b # 4.1.5
        with:
          branch: gh-pages
          folder: .
