name: Deploy the .NET New Relic Lambda Tracer

on:
  workflow_dispatch:
    inputs:
      run_id:
        description: 'Run ID of the Release Workflow (awslambda_release.yml) that was triggered by creating a Release in GitHub.  ID can be found in URL for run.'
        required: true
      deploy:
        description: 'If "true", deploy the artifacts. If "false", do everything except deploy.'
        required: true
        default: 'false'

env:
  DOTNET_NOLOGO: true

permissions:
  contents: read

jobs:

  get-external-artifacts:
    permissions:
      actions: read  # for download-artifact to query and download artifacts (unsure if needed since moving from dawidd6/actions-download-artifact?)
      pull-requests: read  # for download-artifact to query commit hash (same?)
    name: Get and Publish Deploy Artifacts Locally
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          egress-policy: audit 

      - name: Download Deploy Artifacts
        uses: actions/download-artifact@f44cd7b40bfd40b6aa1cc1b9b5b7bf03d3c67110 # v4.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.inputs.run_id }}
          name: deploy-artifacts
          path: ${{ github.workspace }}
          repository: ${{ github.repository }}
      
      - name: Upload Deploy Artifacts Locally
        uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4.0.0
        with:
          name: deploy-artifacts
          path: ${{ github.workspace }}
          if-no-files-found: error
  
  deploy-nuget:
    needs: get-external-artifacts
    name: Deploy to NuGet
    runs-on: windows-2019

    env:
      nuget_source: https://www.nuget.org

    steps:
      - name: Download Deploy Artifacts
        uses: actions/download-artifact@f44cd7b40bfd40b6aa1cc1b9b5b7bf03d3c67110 # v4.1.0
        with:
          name: deploy-artifacts
          path: ${{ github.workspace }}\working_dir

      - name: Setup NuGet API Key
        run: |
          nuget.exe setApiKey ${{ secrets.NUGET_APIKEY }} -Source ${{ env.nuget_source }}
        shell: pwsh

      - name: Deploy .NET New Relic Lambda Tracer to Nuget
        run: |
          $packageName = Get-ChildItem ${{ github.workspace }}\working_dir\NugetAwsLambdaOpenTracer\NewRelic.OpenTracing.AmazonLambda.Tracer.*.nupkg -Name
          $packagePath = Convert-Path ${{ github.workspace }}\working_dir\NugetAwsLambdaOpenTracer\$packageName
          if ("${{ github.event.inputs.deploy }}" -eq "true") {
            nuget.exe push $packagePath -Source ${{ env.nuget_source }}
          }
          else {
            Write-Host "Input:deploy was not true (${{ github.event.inputs.deploy }}).  The following deploy command was not run:"
            Write-Host "nuget.exe push $packagePath -Source ${{ env.nuget_source }}"
          }
        shell: powershell
