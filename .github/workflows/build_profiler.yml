name: Build .NET Agent Profiler

on:
  workflow_call:
    inputs:
      force-build:
        required: false
        default: false
        type: boolean
  workflow_dispatch:
    inputs:
      force-build:
        description: "Build even if no files were updated"
        required: false
        default: true
        type: boolean

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
permissions:
  contents: read

# only allow one instance of this workflow to be running per PR or branch, cancels any that are already running
concurrency:
  group: build-profiler-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  scripts_path: ${{ github.workspace }}\build\scripts
  tools_path: ${{ github.workspace }}\build\Tools
  DOTNET_NOLOGO: true

jobs:
  changes:
    name: Check for Updated Profiler Files
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: read
    outputs:
      profiler_src: ${{ steps.filter.outputs.profiler_src }}
    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0

      - name: Look for modified files
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.1.1
        id: filter
        with:
          filters: |
            profiler_src:
              - 'src/Agent/NewRelic/Profiler/**'
  build-windows-profiler:
    needs: changes
    if: ${{ inputs.force-build ||  needs.changes.outputs.profiler_src == 'true' }}
    name: Build Windows Profiler
    runs-on: windows-2019 # required because it includes Windows SDK 10.0.18362.0

    env:
      profiler_path: ${{ github.workspace }}\src\Agent\NewRelic\Profiler
      profiler_solution_path: ${{ github.workspace }}\src\Agent\NewRelic\Profiler\NewRelic.Profiler.sln
      output_path: ${{ github.workspace }}\src\Agent\_profilerBuild

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@1ff57057b5cfdc39105cd07a01d78e9b0ea0c14c # v1.3.1

      - name: Clean out _profilerBuild directory
        run: |
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\*.*" -Force -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\x64-Release" -Recurse -Force  -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\x86-Release" -Recurse -Force  -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\linux-x64-release" -Recurse -Force  -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\linux-arm64-release" -Recurse -Force  -ErrorAction SilentlyContinue
        shell: powershell

      - name: Build x64
        run: |
          Write-Host "List NuGet Sources"
          dotnet nuget list source # For unknown reasons, this step is necessary to avoid subsequent problems with NuGet package restore
          Write-Host "MSBuild.exe -restore -m -p:Platform=x64 -p:Configuration=Release ${{ env.profiler_solution_path }}"
          MSBuild.exe -restore -m -p:Platform=x64 -p:Configuration=Release ${{ env.profiler_solution_path }}
        shell: powershell

      - name: Build x86
        run: |
          Write-Host "MSBuild.exe -restore -m -p:Platform=Win32 -p:Configuration=Release ${{ env.profiler_solution_path }}"
          MSBuild.exe -restore -m -p:Platform=Win32 -p:Configuration=Release ${{ env.profiler_solution_path }}
        shell: powershell

      - name: Archive Artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: profiler
          path: ${{ github.workspace }}\src\Agent\_profilerBuild\**\*
          if-no-files-found: error

  build-linux-x64-profiler:
    needs: changes
    if: ${{ inputs.force-build ||  needs.changes.outputs.profiler_src == 'true' }}
    name: Build Linux x64 Profiler
    runs-on: ubuntu-22.04
    permissions:
      contents: read # for actions/checkout to fetch code

    env:
      profiler_path: ${{ github.workspace }}/src/Agent/NewRelic/Profiler
      #<other env vars here>

    steps:
      # intentionally disabled for this job, when enabled it causes a failure in the Build Linux Profiler step
      # - name: Harden Runner
      #   uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v2.3.0
      #   with:
      #     egress-policy: audit

      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0

      - name: Clean out _profilerBuild directory
        run: |
          rm -f ${{ github.workspace }}/src/Agent/_profilerBuild/*.* || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/linux-x64-release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/linux-arm64-release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/x64-Release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/x86-Release || true
        shell: bash

      - name: Build Linux Profler
        run: |
          cd ${{ env.profiler_path }}
          docker-compose build build
          docker-compose run build
        shell: bash

      - name: Move Profiler to staging folder
        run: |
          mkdir --parents ${{ github.workspace }}/src/Agent/_profilerBuild/linux-x64-release/
          mv -f ${{ env.profiler_path }}/libNewRelicProfiler.so  ${{ github.workspace }}/src/Agent/_profilerBuild/linux-x64-release/libNewRelicProfiler.so
        shell: bash

      - name: Archive Artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: profiler
          path: ${{ github.workspace }}/src/Agent/_profilerBuild/
          if-no-files-found: error

  build-linux-arm64-profiler:
    needs: changes
    if: ${{ inputs.force-build ||  needs.changes.outputs.profiler_src == 'true' }}
    name: Build Linux ARM64 Profiler
    runs-on: ubuntu-22.04
    permissions:
      contents: read # for actions/checkout to fetch code
      packages: write # for uraimo/run-on-arch-action to cache docker images

    env:
      profiler_path: ${{ github.workspace }}/src/Agent/NewRelic/Profiler

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@6b3083af2869dc3314a0257a42f4af696cc79ba3 # v2.3.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0

      - name: Clean out _profilerBuild directory
        run: |
          rm -f ${{ github.workspace }}/src/Agent/_profilerBuild/*.* || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/linux-x64-release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/linux-arm64-release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/x64-Release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/x86-Release || true
        shell: bash

      - uses: uraimo/run-on-arch-action@a8003307a739516fdd80ee6d3da8924db811b8da # v2.5.0
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu18.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update -q -y
            apt-get install -q -y wget curl git dos2unix software-properties-common make binutils libc++-dev clang-3.9 lldb-3.9 build-essential
            echo "deb https://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9 main" | tee /etc/apt/sources.list.d/llvm.list
            wget --no-cache --no-cookies -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
            mkdir /root/git
            cd /root/git
            git clone --branch release/3.1 https://github.com/dotnet/coreclr.git
            curl -sSL https://virtuoso-testing.s3.us-west-2.amazonaws.com/cmake-3.9.0-rc3-aarch64.tar.gz | tar -xzC ~
            chmod 777 ~/cmake-3.9.0-rc3-aarch64/bin/cmake
            ln -s ~/cmake-3.9.0-rc3-aarch64/bin/cmake /usr/bin/cmake || true
            rm /usr/bin/cc || true
            ln -s /usr/bin/clang-3.9 /usr/bin/cc
            rm /usr/bin/c++ || true
            ln -s /usr/bin/clang++-3.9 /usr/bin/c++
          dockerRunArgs: |
            --volume "${{ env.profiler_path }}:/profiler"
          run: |
            cd /profiler
            chmod 777 ./linux/build_profiler.sh
            ./linux/build_profiler.sh

      - name: Move Profiler to staging folder
        run: |
          mkdir --parents ${{ github.workspace }}/src/Agent/_profilerBuild/linux-arm64-release/
          mv -f ${{ env.profiler_path }}/libNewRelicProfiler.so  ${{ github.workspace }}/src/Agent/_profilerBuild/linux-arm64-release/libNewRelicProfiler.so
        shell: bash

      - name: Archive Artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: profiler
          path: ${{ github.workspace }}/src/Agent/_profilerBuild/
          if-no-files-found: error

  commit-changes:
    needs:
      [
        changes,
        build-windows-profiler,
        build-linux-x64-profiler,
        build-linux-arm64-profiler,
      ]

    if: ${{ inputs.force-build}} || needs.changes.outputs.profiler_src == 'true'

    name: Commit and Push New Profiler Build
    runs-on: ubuntu-22.04

    permissions:
      contents: write

    env:
      profiler_path: ${{ github.workspace }}/src/Agent/NewRelic/Profiler

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v2.3.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Profiler Artifacts
        uses: actions/download-artifact/@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: profiler
          path: ${{ github.workspace }}/src/Agent/_profilerBuild/

      - name: Commit and Push New Profiler Build
        uses: actions-js/push@156f2b10c3aa000c44dbe75ea7018f32ae999772 #v1.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: "chore: updated profiler build"
          branch: ${{ github.ref }}
