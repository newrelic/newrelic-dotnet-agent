version: "3"

# The following must be set either in environment variables or via a .env file in the same folder as this file:
#
# AGENT_PATH      host path to the Agent linux home folder - will map to /usr/local/newrelic-dotnet-agent in the container
# LOG_PATH        host path for Agent logfile output - will map to /app/logs in the container
# DISTRO_TAG      distro tag for build, not including the architecture suffix - possible values 7.0-bullseye-slim, 7.0-alpine, 7.0-jammy
# TARGET_ARCH     the target architecture for the build and run -- either amd64 or arm64
# PORT            external port for the smoketest API
# CONTAINER_NAME  The name for the container
# PLATFORM        The platform that the service runs on -- linux/amd64 or linux/arm64/v8
# DOTNET_VERSION  The dotnet version number to use (7.0, 8.0, etc)
# TEST_DOCKERFILE The path and dockerfile to use for the service.
#
# NEW_RELIC_KAFKA_TOPIC
# 
# and the usual suspects:
# NEW_RELIC_LICENSE_KEY
# NEW_RELIC_HOST
# NEW_RELIC_APP_NAME
#
#
# To build and run, execute `docker compose -f <path to docker-compose.yml> up` 
# Alternatively, set COMPOSE_FILE environment variable to the path and omit the -f parameter

services:
    LinuxSmokeTestApp:
        container_name: ${CONTAINER_NAME}
        image: ${CONTAINER_NAME}
        platform: ${PLATFORM}
        build:
            context: .
            dockerfile: ${TEST_DOCKERFILE}
            args:
                DISTRO_TAG: ${DISTRO_TAG}
                TARGET_ARCH: ${TARGET_ARCH}
                NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
                NEW_RELIC_APP_NAME: ${NEW_RELIC_APP_NAME}
                NEW_RELIC_HOST: ${NEW_RELIC_HOST}
                DOTNET_VERSION: ${DOTNET_VERSION}
                APP_DOTNET_VERSION: ${APP_DOTNET_VERSION}
        ports:
          - "${PORT}:80"
        volumes:
          - ${AGENT_PATH}:/usr/local/newrelic-dotnet-agent # AGENT_PATH from .env, points to newrelichome_linux_x64
          - ${LOG_PATH}:/app/logs # LOG_PATH from .env, should be a folder unique to this run of the smoketest app           
        depends_on:
            - kafka-broker
        environment:
            - NEW_RELIC_KAFKA_TOPIC=${NEW_RELIC_KAFKA_TOPIC}
            - NEW_RELIC_KAFKA_BROKER_NAME=kafka-broker

    kafka-broker:
        image: confluentinc/cp-kafka:7.5.0
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:29092,PLAINTEXT_HOST://kafka-broker:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
          KAFKA_PROCESS_ROLES: broker,controller
          KAFKA_NODE_ID: 1
          KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-broker:29093
          KAFKA_LISTENERS: PLAINTEXT://kafka-broker:29092,CONTROLLER://kafka-broker:29093,PLAINTEXT_HOST://:9092
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
          CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
        
            
networks:
    default:
        driver: bridge
        driver_opts:
          com.docker.network.bridge.enable_icc: "true"
