<Project InitialTargets="VersionByGitTag">
  <PropertyGroup>
    <Company>New Relic</Company>
    <Copyright>Copyright © 2017</Copyright>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net35'">
    <Product>New Relic .NET Agent</Product>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <Product>New Relic .NET CoreCLR Agent</Product>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net35'">
    <TargetFrameworkIdentifier>.NETFramework</TargetFrameworkIdentifier>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <TargetFrameworkIdentifier>.NETStandard</TargetFrameworkIdentifier>
    <RuntimeFrameworkVersion>2.0.0</RuntimeFrameworkVersion>
  </PropertyGroup>

  <Target Name="CreateGitVersion" >
    <!-- Get current working branch-->
    <Exec Command="git rev-parse --abbrev-ref HEAD" ConsoleToMSBuild="true" StandardOutputImportance="low">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitBranchName" />
    </Exec>
    <!-- Get current hash-->
    <Exec Command="git rev-parse --short HEAD" ConsoleToMSBuild="true" StandardOutputImportance="low">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitHash" />
    </Exec>
    <!-- Get last release version-->
    <Exec Command="git describe --tags --match v[0-9]* --abbrev=0 HEAD" ConsoleToMSBuild="true" StandardOutputImportance="low">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitLatestTagVersion" />
    </Exec>
    <!-- Get get the number of commits between the release tag and current working branch-->
    <Exec Command="git rev-list $(GitLatestTagVersion)..$(GitBranchName) --count HEAD" ConsoleToMSBuild="true" StandardOutputImportance="low">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitCommitCount" />
    </Exec>
    <PropertyGroup>
      <GitGitLatestTagVersionSanitized>$(GitLatestTagVersion.Replace('v',''))</GitGitLatestTagVersionSanitized>
      <GitVersion>$(GitGitLatestTagVersionSanitized).$(GitCommitCount).0</GitVersion>
      <Version>$(GitVersion)</Version>
      <PackageVersion>$(GitVersion)</PackageVersion>
      <AssemblyFileVersion>$(GitVersion)</AssemblyFileVersion>
      <AssemblyVersion>$(GitVersion)</AssemblyVersion>
      <GitBranchNameSanitized Condition="'$(GitBranchName)' != '6.x-master'">.branch.$(GitBranchName.Replace('/','-'))</GitBranchNameSanitized>
      <InformationalVersion>$(GitVersion)+sha.$(GitHash)$(GitBranchNameSanitized)</InformationalVersion>
    </PropertyGroup>
  </Target>
</Project>
